/*
	Interpretador feito em sala de aula, v. 1
*/
import java.io.*;

class Op {
    float val;
    boolean bErro;
    String statusMsg;

    public Op(float val) {
        this.val = val;
        this.bErro = false;
    }

    public float get() {
        return val;
    }

    public void set(Op x) {
        val = x.get();
    }

    public void set(float x) {
        val = x;
    }

    public void add(Op v) {
        val += v.get();
    }

    public void sub(Op v) {
        val -= v.get();
    }

    public void mul(Op v) {
        val *= v.get();
    }

    public void div(Op v) {
        float val2 = v.get();
        if (val2 == 0) {
            bErro = true;
            statusMsg = "divis√£o por zero!";
            val2 = 1;
        }
        val /= val2;
    }

    public void setAbs(Op v) {
        val = abs(v.get());
    }
    
    public void setFat(Op v) {
        if (val < 0) {
            bErro = true;
            statusMsg = "fatorial de negativo!";
            val = 0;
        }
        val = fat((int)v.get());
    }

    public void exibir()
    {
        if (bErro)
            System.out.println("  ERRO: " + statusMsg);
        else if (val % 1 == 0)
            System.out.println("  " + (int)val);
        else
            System.out.println("  " + val);
    }

    private float abs(float x) {return x<0? -x: x;};
    private int fat(int x) {return x==0? 1: x * fat(x-1);};
}

COMPILER Calc2

CHARACTERS
	digito = "0123456789".
TOKENS
	numero = digito {digito} [ "." { digito } ].
IGNORE  '\n' + '\r' + '\t'

PRODUCTIONS

Calc2 				(. Op v = new Op(0); .)
= Exp<out v>		(. v.exibir(); .) 
  EOF 
.

Exp<out Op v> 		(. Op v1, v2; int sinal; v = new Op(0);
                       v1 = new Op(0); v2 = new Op(0); sinal = 1; .)
= ["-"				(. sinal = -1; .)
  ] T<out v1> 		(. v.set(sinal * v1.get()); .)
  { "+" T<out v2>	(. v.add(v2); .)
  | "-" T<out v2>	(. v.sub(v2); .)
  }
.

T<out Op v> 		(. Op v1, v2; v1 = new Op(0); v2 = new Op(0); v = new Op(0); .)
= U<out v1> 		(. v.set(v1); .)
  { "*" U<out v2>	(. v.mul(v2); .)
  | "/" U<out v2>	(. v.div(v2); .)
  }
.

U<out Op vu>		(. Op v = new Op(0); vu = new Op(0); .) 
= F<out v> 			(. vu.set(v); .)
    {"!"			(. vu.setFat(vu); .)
    }
.

F<out Op v>		    (. Op vexp = new Op(0); v = new Op(0); .) 
= numero			(. v.set(Float.parseFloat(t.val)); .)
| "(" Exp<out vexp>	(. v.set(vexp); .) 
  ")"
| "abs" 	
  "(" Exp<out vexp>	(. v.setAbs(vexp); .)
  ")"
.

END Calc2.
